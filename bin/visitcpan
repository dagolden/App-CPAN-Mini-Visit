#!/usr/bin/env perl
use strict;
use warnings;

use version; our $VERSION = '0.004';

require App::CPAN::Mini::Visit;
exit App::CPAN::Mini::Visit->run(@ARGV);

__END__

=begin wikidoc

= NAME

visitcpan - explore each distribution in a minicpan repository

= VERSION

This documentation refers to %%VERSION%%.

= SYNOPSIS

    $ visitcpan [OPTIONS] [PROGRAM]

    $ visitcpan [OPTIONS] -- [PROGRAM] [ARGS]

= DESCRIPTION

This program executes other programs against each distribution in a minicpan
repository.  Given a program to run, for each distribution archive in the
repository, it will:

* extract the distribution archive to a temporary directory 
* change to the temporary directory
* execute the user-specified program
* return to the original directory
* clean up the temporary directory

If no program to run is provided, {visitcpan} will instead produce a listing of
distribution files, one per line, that can be piped to other programs for
analysis.

To avoid conflicts between {visitcpan} options and arguments provided to
the program to run, use two dashes ('--') to separate minicpan options 
from other arguments.

By default, {visitcpan} will use a local minicpan repository as defined 
in a .minicpanrc file. 

= OPTIONS

 --append|-a        --append=dist -> append distname after ARGS
                    --append=path -> append tarball path after ARGS

 --help|-h          this usage info 

 --minicpan|-m      directory of a minicpan (defaults to local minicpan 
                    from CPAN::Mini config file)

 --quiet|-q         silence warnings and suppress STDERR from tar

 --version|-V       visitcpan program version

 --                 indicates the end of options for visitcpan

= BUGS

Please report any bugs or feature using the CPAN Request Tracker.  
Bugs can be submitted through the web interface at 
[http://rt.cpan.org/Dist/Display.html?Queue=App-CPAN-Mini-Visit]

When submitting a bug or request, please include a test-file or a patch 
to an existing test-file that illustrates the bug or desired feature.

= SEE ALSO

[CPAN::Mini::Extract] creates a minicpan with archives extracted.  Analyzing
an extracted tree will be faster than {visitcpan}, but the tree will take
up substantially more space on disk.

= AUTHOR

David A. Golden (DAGOLDEN)

= COPYRIGHT AND LICENSE

Copyright (c) 2008 by David A. Golden

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at 
[http://www.apache.org/licenses/LICENSE-2.0]

Files produced as output though the use of this software, including
generated copies of boilerplate templates provided with this software,
shall not be considered Derivative Works, but shall be considered the
original work of the Licensor.

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end wikidoc

=cut

#--------------------------------------------------------------------------#
# Don't edit below here
#--------------------------------------------------------------------------#

# Generated by Pod::WikiDoc version 0.18

=pod

=head1 NAME

visitcpan - explore each distribution in a minicpan repository

=head1 VERSION

This documentation refers to 0.004.

=head1 SYNOPSIS

     $ visitcpan [OPTIONS] [PROGRAM]
 
     $ visitcpan [OPTIONS] -- [PROGRAM] [ARGS]

=head1 DESCRIPTION

This program executes other programs against each distribution in a minicpan
repository.  Given a program to run, for each distribution archive in the
repository, it will:

=over

=item *

extract the distribution archive to a temporary directory 

=item *

change to the temporary directory

=item *

execute the user-specified program

=item *

return to the original directory

=item *

clean up the temporary directory

=back

If no program to run is provided, C<<< visitcpan >>> will instead produce a listing of
distribution files, one per line, that can be piped to other programs for
analysis.

To avoid conflicts between C<<< visitcpan >>> options and arguments provided to
the program to run, use two dashes ('--') to separate minicpan options 
from other arguments.

By default, C<<< visitcpan >>> will use a local minicpan repository as defined 
in a .minicpanrc file. 

=head1 OPTIONS

  --append|-a        --append=dist -> append distname after ARGS
                     --append=path -> append tarball path after ARGS
 
  --help|-h          this usage info 
 
  --minicpan|-m      directory of a minicpan (defaults to local minicpan 
                     from CPAN::Mini config file)
 
  --quiet|-q         silence warnings and suppress STDERR from tar
 
  --version|-V       visitcpan program version
 
  --                 indicates the end of options for visitcpan

=head1 BUGS

Please report any bugs or feature using the CPAN Request Tracker.  
Bugs can be submitted through the web interface at 
L<http://rt.cpan.org/Dist/Display.html?Queue=App-CPAN-Mini-Visit>

When submitting a bug or request, please include a test-file or a patch 
to an existing test-file that illustrates the bug or desired feature.

=head1 SEE ALSO

L<CPAN::Mini::Extract> creates a minicpan with archives extracted.  Analyzing
an extracted tree will be faster than C<<< visitcpan >>>, but the tree will take
up substantially more space on disk.

=head1 AUTHOR

David A. Golden (DAGOLDEN)

=head1 COPYRIGHT AND LICENSE

Copyright (c) 2008 by David A. Golden

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at 
L<http://www.apache.org/licenses/LICENSE-2.0>

Files produced as output though the use of this software, including
generated copies of boilerplate templates provided with this software,
shall not be considered Derivative Works, but shall be considered the
original work of the Licensor.

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


